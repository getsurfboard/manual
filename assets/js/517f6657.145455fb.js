"use strict";(self.webpackChunkmanual=self.webpackChunkmanual||[]).push([[5946],{6100:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>s,contentTitle:()=>d,default:()=>f,frontMatter:()=>a,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"profile-format/managed_config","title":"#!MANAGED-CONFIG","description":"!MANAGED-CONFIG`","source":"@site/docs/profile-format/managed_config.md","sourceDirName":"profile-format","slug":"/profile-format/managed_config","permalink":"/docs/profile-format/managed_config","draft":false,"unlisted":false,"editUrl":"https://github.com/getsurfboard/manual/edit/main/docs/profile-format/managed_config.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"// Comment","permalink":"/docs/profile-format/comment"},"next":{"title":"dns-server","permalink":"/docs/profile-format/general/dns_server"}}');var r=i(4848),o=i(8453);const a={sidebar_position:2},d="#!MANAGED-CONFIG",s={},l=[{value:"Param",id:"param",level:2}];function c(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"managed-config",children:(0,r.jsx)(n.code,{children:"#!MANAGED-CONFIG"})})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"#!MANAGED-CONFIG http://test.com/surfboard.conf interval=60 strict=true\n"})}),"\n",(0,r.jsx)(n.p,{children:"Managed config can be used to define an update url for current profile.\nProfile with managed config defined be can updated automatically in the background"}),"\n",(0,r.jsx)(n.admonition,{type:"caution",children:(0,r.jsx)(n.p,{children:"Managed config must be defined in the first line of the profile"})}),"\n",(0,r.jsx)(n.h2,{id:"param",children:"Param"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"interval"}),": profile interval update time","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"format: number"}),"\n",(0,r.jsx)(n.li,{children:"unit: second"}),"\n",(0,r.jsx)(n.li,{children:"minimum value: 900 (15 minutes)"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"strict"}),": profile that have not been updated within the specified time are not allowed to be used","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"format: boolean"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.admonition,{type:"caution",children:(0,r.jsxs)(n.p,{children:["Currently Surfboard will ignore ",(0,r.jsx)(n.code,{children:"strict"})," param definition and treat it like ",(0,r.jsx)(n.code,{children:"false"})]})})]})}function f(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>d});var t=i(6540);const r={},o=t.createContext(r);function a(e){const n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);