"use strict";(self.webpackChunkmanual=self.webpackChunkmanual||[]).push([[4462],{4485:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"profile-format/overview","title":"Overview","description":"Surfboard follow Surge\'s profile format","source":"@site/docs/profile-format/overview.md","sourceDirName":"profile-format","slug":"/profile-format/overview","permalink":"/docs/profile-format/overview","draft":false,"unlisted":false,"editUrl":"https://github.com/getsurfboard/manual/edit/main/docs/profile-format/overview.md","tags":[],"version":"current","sidebarPosition":0,"frontMatter":{"sidebar_position":0},"sidebar":"tutorialSidebar","previous":{"title":"How to use this app","permalink":"/docs/how_to_use_this_app"},"next":{"title":"// Comment","permalink":"/docs/profile-format/comment"}}');var t=o(4848),s=o(8453);const i={sidebar_position:0},a="Overview",l={},c=[];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"overview",children:"Overview"})}),"\n",(0,t.jsxs)(n.admonition,{type:"tip",children:[(0,t.jsxs)(n.p,{children:["Surfboard follow ",(0,t.jsx)(n.a,{href:"https://nssurge.com/",children:"Surge"}),"'s profile format"]}),(0,t.jsxs)(n.p,{children:["Surge's profile documentation can be viewed ",(0,t.jsx)(n.a,{href:"https://manual.nssurge.com/",children:"here"})]})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ini",children:"#!MANAGED-CONFIG http://test.com/surfboard.conf interval=60 strict=true # subscribe profile url and auto update config\n[General]\n# Specify dns server used by application\ndns-server = system, 8.8.8.8, 8.8.4.4, 9.9.9.9:9953\n\n# Specify doh server used by application\ndoh-server = https://9.9.9.9/dns-query\n\n# Specify route rule and domain rule, matching traffic will not be redirected or rejected.\nskip-proxy = 127.0.0.1, 192.168.0.0/16, 10.0.0.0/8, 172.16.0.0/12, 100.64.0.0/10, localhost, *.local, www.baidu.com //444\n\n# Test url used by url-test and manually node speed test. Redirect proxy will use this url.\nproxy-test-url = http://www.gstatic.com/generate_204\n\n# Test url used by url-test and manually node speed test. Direct proxy will use this url.\ninternet-test-url = http://www.gstatic.cn/generate_204\n\n# Timeout for all connectivity test\ntest-timeout = 5\n\n# Match domain won't get fake ip dns response\nalways-real-ip = *.srv.nintendo.net, *.stun.playstation.net, xbox.*.microsoft.com, *.xboxlive.com\n\n# Establish a http proxy server on your device and provide proxy service in specified ip\nhttp-listen = 0.0.0.0:1234\n\n# Establish a socks5 proxy server on your device and provide proxy service in specified ip\nsocks5-listen = 127.0.0.1:1235\n\n# If proxy not support udp relay, use DIRECT or REJECT instead\nudp-policy-not-supported-behaviour = DIRECT\n\n[Host]\n# map 'abc.com' to '1.2.3.4'\nabc.com = 1.2.3.4\n\n# map any domain end with '.dev' to '6.7.8.9'\n*.dev = 6.7.8.9\n\n# alias 'bar.com' dns query result to 'foo.com'\nfoo.com = bar.com\n\n# assign '8.8.8.8' as dns server for 'bar.com'\nbar.com = server:8.8.8.8\n\n[Proxy]\n# build in policy\nOn = direct\nOff = reject\n\n# http proxy\nProxyHTTP = http, 1.2.3.4, 443, username, password\n\n# https proxy\nProxyHTTPS = https, 1.2.3.4, 443, username, password, skip-cert-verify=true, sni=www.google.com\n\n# socks5 proxy\nProxySOCKS5 = socks5, 1.2.3.4, 443, username, password, udp-relay=false\n\n# socks5 over tls proxy\nProxySOCKS5TLS = socks5-tls, 1.2.3.4, 443, username, password, skip-cert-verify=true, sni=www.google.com\n\n# shadowsocks proxy, simple-obfs supported\nProxySS = ss, 1.2.3.4, 8000, encrypt-method=chacha20-ietf-poly1305, password=abcd1234, udp-relay=false, obfs=http, obfs-host=www.google.com, obfs-uri=/\n\n# vmess proxy, tls and websocket supported, pure tcp is not supported\nProxyVMess = vmess, 1.2.3.4, 8000, username=0233d11c-15a4-47d3-ade3-48ffca0ce119, udp-relay=false, ws=true, tls=true, ws-path=/v2, ws-headers=X-Header-1:value|X-Header-2:value, skip-cert-verify=true, sni=www.google.com, vmess-aead=true\n\n# trojan proxy, trojan grpc is not supported\nProxyTrojan = trojan, 192.168.20.6, 443, password=password1, udp-relay=false, skip-cert-verify=true, sni=www.google.com\n\n# wireguard proxy\nProxyWireguard = wireguard, section-name = HomeServer\n\n[WireGuard HomeServer]\nprivate-key = sDEZLACT3zgNCS0CyClgcBC2eYROqYrwLT4wdtAJj3s=\nself-ip = 10.0.2.2\ndns-server = 8.8.8.8\nmtu = 1280\npeer = (public-key = fWO8XS9/nwUQcqnkfBpKeqIqbzclQ6EKP20Pgvzwclg=, allowed-ips = 0.0.0.0/0, endpoint = 192.168.20.6:51820, keepalive = 30)\n\n[Proxy Group]\n# proxy group whose selected proxy can be changed manually\nSelectGroup = select, ProxyHTTP, ProxyHTTPS, DIRECT, REJECT\n\n# proxy group whose selected proxy can be decided based on url test result automatically\nAutoTestGroup = url-test, ProxySOCKS5, ProxySOCKS5TLS, url=http://www.gstatic.com/generate_204, interval=600, tolerance=100, timeout=5, hidden=true\n\n# proxy group with a external proxies list url\nExternalGroup = select, policy-path=https://test.com/nodes.txt, policy-regex-filter=HK-.*\nAutoExternalGroup = url-test, policy-path=https://test.com/nodes.txt\n\n# proxy group which contains all proxy under [Proxy] section\nAllProxies = select, include-all-proxies = true\n\n# proxy group which contains all proxy from other group by name\nIncludeOtherGroup = select, include-other-group = \"SelectGroup, ExternalGroup\", policy-regex-filter=Proxy.*\n\n# proxy group whose selection is chosen randomly\nLoadBalanceGroup = load-balance, ProxyHTTP, ProxyHTTPS\n\n# proxy group just like url-test but follow 'first come first served' rule\nFallbackGroup = fallback, ProxySOCKS5, ProxySOCKS5TLS, url=http://www.gstatic.com/generate_204, interval=600, timeout=5\n\n[Rule]\n# domain exact match 'www.apple.com' will be redirected to proxy named 'ProxyHTTP' in [Proxy] section \nDOMAIN,www.apple.com,ProxyHTTP\n\n# domain exact match 'www.google.com' will be redirected to proxy group named 'SelectGroup' in [Proxy Group] section\nDOMAIN,www.google.com,SelectGroup\n\n# domain ends with 'apple.com' will be redirected to 'Proxy', DNS query of this domain will triggered in the remote proxy\nDOMAIN-SUFFIX,apple.com,Proxy,force-remote-dns\n\n# domain contains 'google' keyword will be redirected to 'Proxy', a fake ip will be returned in DNS query\nDOMAIN-KEYWORD,google,Proxy,enhanced-mode\n\n# destination ip match route '192.168.0.0/16' will be sent directly\nIP-CIDR,192.168.0.0/16,DIRECT\n\n# destination ip located in United State will be rejected\nGEOIP,US,REJECT\n\n# traffic sent by application whose package name is 'com.android.vending' will be sent to 'Proxy'\nPROCESS-NAME,com.android.vending,Proxy  # android package name\nPROCESS-NAME,*google*,Proxy             # android package name wildcard rule\n\n# traffic match external rules defined in 'https://ruleset.com/cn' will be sent to 'ProxyVMess'\nRULE-SET,https://ruleset.com/cn,ProxyVMess\n\n# traffic match external domain rules defined in 'https://domainset.com/ad' will be rejected'\nDOMAIN-SET,https://domainset.com/ad,REJECT\n\n# traffic sent using wifi whose ssid name is 'CMCC' will be rejected\nSUBNET,SSID:CMCC,REJECT\n\n# traffic sent using wifi whose bssid is 'F4-98-A0-73-3A-5B' will be sent directly\nSUBNET,BSSID:F4-98-A0-73-3A-5B,DIRECT\n\n# traffic sent through a router whose ip is '192.168.1.1' will be sent directly\nSUBNET,ROUTER:192.168.1.1,DIRECT\n\n# traffic sent using wifi will be sent directly\nSUBNET,TYPE:WIFI,DIRECT\n\n# traffic sent using wired network will be sent directly\nSUBNET,TYPE:WIRED,DIRECT\n\n# traffic sent using mobile network will be sent through 'SelectGroup'\nSUBNET,TYPE:CELLULAR,SelectGroup\n\n# traffic sent using mobile network whose MCC is 100 and MNC is 200, will be sent directly\nSUBNET,MCCMNC:100-200,DIRECT\n\n# reject quic, fallback to tls\nPROTOCOL,QUIC,REJECT\n\n# traffic doesn't match rules above will be sent to 'ProxyTrojan'\nFINAL,ProxyTrojan\n\n[Panel]\nPanelA = title=\"Panel Title\", content=\"Panel Content\\nSecondLine\", style=info\n"})}),"\n",(0,t.jsx)(n.p,{children:"You can read on for detailed definitions of different sections"})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>i,x:()=>a});var r=o(6540);const t={},s=r.createContext(t);function i(e){const n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);